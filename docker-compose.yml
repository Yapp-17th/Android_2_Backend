version: "3"
services:
  zookeeper:
    image: wurstmeister/zookeeper
    container_name: zookeeper
    ports:
      - "2181:2181"

  kafka:
    image: wurstmeister/kafka
    container_name: kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_HOST_NAME: 52.78.52.254
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    depends_on:
      - zookeeper

  mysql:
    image: mysql
    container_name: mysql
    ports:
      - "3306:3306"
    volumes:
      - ./data/mysql:/var/lib/mysql:rw
    environment:
      - MYSQL_ROOT_PASSWORD=dnjscksdn98@
      - MYSQL_DATABASE=explanet_dev
      - MYSQL_USER=alex
      - MYSQL_PASSWORD=dnjscksdn98@

  api-gateway:
    container_name: api-gateway
    ports:
      - "80:80"
    build:
      context: ./api-gateway
      args:
        ENVIRONMENT: dev
      dockerfile: Dockerfile
    depends_on:
      - mysql

  chatting-service:
    container_name: chatting-service
    ports:
      - "8080:8080"
    build:
      context: ./chatting-service
      args:
        ENVIRONMENT: dev
      dockerfile: Dockerfile
    depends_on:
      - mysql
      - kafka
      - api-gateway

  chat-bot-service:
    container_name: chat-bot-service
    ports:
      - "8081:8081"
    build:
      context: ./chat-bot-service
      args:
        ENVIRONMENT: dev
      dockerfile: Dockerfile
    depends_on:
      - mysql
      - kafka
      - api-gateway

  base-service:
    container_name: base-service
    ports:
      - "8082:8082"
    build:
      context: ./base-service
      args:
        ENVIRONMENT: dev
      dockerfile: Dockerfile
    depends_on:
      - mysql
      - api-gateway

  board-service:
    container_name: board-service
    ports:
      - "8083:8083"
    build:
      context: ./board-service
      args:
        ENVIRONMENT: dev
      dockerfile: Dockerfile
    depends_on:
      - mysql
      - kafka
      - api-gateway

  login-service:
    container_name: login-service
    ports:
      - "8084:8084"
    build:
      context: ./login-service
      args:
        ENVIRONMENT: dev
      dockerfile: Dockerfile
    depends_on:
      - mysql
      - api-gateway

  mypage-service:
    container_name: mypage-service
    ports:
      - "8085:8085"
    build:
      context: ./mypage-service
      args:
        ENVIRONMENT: dev
      dockerfile: Dockerfile
    depends_on:
      - mysql
      - api-gateway

  watcher-service:
    container_name: watcher-service
    ports:
      - "8086:8086"
    build:
      context: ./watcher-service
      args:
        ENVIRONMENT: dev
      dockerfile: Dockerfile
    depends_on:
      - mysql
      - kafka
      - api-gateway
